image: golang:latest

variables:
  HIST_EVENTS_BASE_DIR: $CI_PROJECT_DIR/historical-events
  HIST_EVENTS_EXECUTABLE: $HIST_EVENTS_BASE_DIR/cmd/historical-events
  K8S_NAMESPACE: ales-litvin

stages:
  - lint
  - test
  - build
  - image
  - template
  - deploy

go_lint:
  image: golangci/golangci-lint:latest
  stage: lint
  allow_failure: false
  script:
    - cd $HIST_EVENTS_BASE_DIR
    - golangci-lint run -v

helm_lint:
  stage: lint
  image: centosadmin/kubernetes-helm:3.6.3
  environment:
    name: development
  script:
    - cd $HIST_EVENTS_BASE_DIR
    - helm lint .helm/historical-events-backend
        --set image.repository=$CI_REGISTRY_IMAGE
        --set image.tag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  # only:
  #   - master


test:
  stage: test
  script:
    - cd $HIST_EVENTS_BASE_DIR
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

build:
  stage: build
  variables: 
    CGO_ENABLED: 0
    GOOS: linux
  script:
    - cd $HIST_EVENTS_BASE_DIR
    - |
      go build -v -o $HIST_EVENTS_EXECUTABLE  \
      -ldflags="-X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.version=$CI_COMMIT_TAG' \
          -X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.gitCommit=$CI_COMMIT_SHA' \
          -X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.gitAuthor=$CI_COMMIT_AUTHOR' \
          -X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.time=$(date)'" \
      $HIST_EVENTS_EXECUTABLE.go
  artifacts:
    paths:
      - $HIST_EVENTS_EXECUTABLE

build_image:
  stage: image
  image:
    name: gcr.io/kaniko-project/executor:debug-v1.3.0
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      /kaniko/executor --context $HIST_EVENTS_BASE_DIR \
      --cache=true --cache-repo=$CI_REGISTRY_IMAGE \
      --dockerfile $HIST_EVENTS_BASE_DIR/DockerfilePreBuild \
      --destination ${CI_REGISTRY_IMAGE}:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID

template:
  stage: template
  image: centosadmin/kubernetes-helm:3.6.3
  script:
    - cd $HIST_EVENTS_BASE_DIR
    - helm template $CI_PROJECT_PATH_SLUG .helm/historical-events-backend
        --set image.repository=$CI_REGISTRY_IMAGE
        --set image.tag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  # only:
  #   - master


deploy:dev:
  stage: deploy
  image: centosadmin/kubernetes-helm:v3.12.3
  variables:
    OKTETO_VERSION: 2.22.2
    OKTETO_TOKEN: $CI_OKTETO_TOKEN
    OKTETO_URL: https://cloud.okteto.com
  script:
    # - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash 
    # - ls
    # - export KUBECONFIG=$CI_PROJECT_DIR/.secure_files/okteto-kube.config
    # - ls
    - curl https://get.okteto.com -sSfL | sh # download okteto cli
    - export PATH=$PATH:/usr/local/bin/okteto
    - okteto context
    - okteto kubeconfig
    - cd $HIST_EVENTS_BASE_DIR
    - helm upgrade --install historical-events .helm/historical-events-backend
        --set image.repository=$CI_REGISTRY_IMAGE
        --set image.tag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
        --debug
        --atomic
        --timeout 120s
        --namespace $K8S_NAMESPACE
  # only:
  #   - master

# deploy:dev:
#   stage: deploy
#   image: centosadmin/kubernetes-helm:3.6.3
#   environment:
#     name: development
#   script:
#     - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_DEV_API_URL
#     - kubectl config set-credentials ci --token=$K8S_DEV_CI_TOKEN
#     - kubectl config set-context ci --cluster=k8s --user=ci
#     - kubectl config use-context ci
#     - helm upgrade --install xpaste .helm
#         --set image=$CI_REGISTRY_IMAGE
#         --set imageTag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
#         --debug
#         --atomic
#         --timeout 120s
#         --namespace $NAMESPACE-$CI_ENVIRON