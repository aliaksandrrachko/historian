image: golang:latest

variables:
  HIST_EVENTS_BASE_DIR: $CI_PROJECT_DIR/historical-events
  HIST_EVENTS_EXECUTABLE: $HIST_EVENTS_BASE_DIR/cmd/historical-events

.hist_events_base_dir: &hist_events_base_dir
  - cd $HIST_EVENTS_BASE_DIR

.okteto_setup: &okteto_setup
  variables:
    OKTETO_VERSION: 2.22.2
    OKTETO_TOKEN: $CI_OKTETO_TOKEN
    OKTETO_URL: https://cloud.okteto.com
    OKTETO_NAMESPACE: ales-litvin
    K8S_NAMESPACE: $OKTETO_NAMESPACE
  before_script:
    - curl https://get.okteto.com -sSfL | sh
    - export PATH=$PATH:/usr/local/bin/okteto
    - okteto context
    - okteto kubeconfig

stages:
  - lint
  - test
  - build
  - image
  - template
  - deploy

lint:go:
  image: golangci/golangci-lint:latest
  stage: lint
  allow_failure: false
  script:
    - *hist_events_base_dir
    - golangci-lint run -v

lint:helm:
  stage: lint
  image: centosadmin/kubernetes-helm:3.6.3
  environment:
    name: development
  script:
    - *hist_events_base_dir
    - helm lint .helm/historical-events-backend
      --set image.repository=$CI_REGISTRY_IMAGE
      --set image.tag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  # only:
  #   - master


test:
  stage: test
  script:
    - *hist_events_base_dir
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

build:
  stage: build
  variables: 
    CGO_ENABLED: 0
    GOOS: linux
  script:
    - *hist_events_base_dir
    - go build -v -o $HIST_EVENTS_EXECUTABLE
      -ldflags="-X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.version=$CI_COMMIT_TAG'
        -X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.gitCommit=$CI_COMMIT_SHA'
        -X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.gitAuthor=$CI_COMMIT_AUTHOR'
        -X 'github.com/aliaksandrrachko/historian/historical-events/internal/build.time=$CI_PIPELINE_CREATED_AT'"
      $HIST_EVENTS_EXECUTABLE.go
  artifacts:
    paths:
      - $HIST_EVENTS_EXECUTABLE

build:image:
  stage: image
  image:
    name: gcr.io/kaniko-project/executor:debug-v1.3.0
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $HIST_EVENTS_BASE_DIR
      --cache=true --cache-repo=$CI_REGISTRY_IMAGE
      --dockerfile $HIST_EVENTS_BASE_DIR/DockerfilePreBuild
      --destination ${CI_REGISTRY_IMAGE}:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID

template:
  stage: template
  image: centosadmin/kubernetes-helm:3.6.3
  script:
    - *hist_events_base_dir
    - helm template $CI_PROJECT_PATH_SLUG .helm/historical-events-backend
      --values .helm/historical-events-backend/values-okteto.yaml
      --set image.repository=$CI_REGISTRY_IMAGE
      --set image.tag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  # only:
  #   - master


deploy:okteto:dev:
  <<: *okteto_setup
  stage: deploy
  image: centosadmin/kubernetes-helm:v3.12.3
  script:
    - *hist_events_base_dir
    - helm upgrade $CI_PROJECT_PATH_SLUG .helm/historical-events-backend
      --install
      --values .helm/historical-events-backend/values-okteto.yaml
      --set image.repository=$CI_REGISTRY_IMAGE
      --set image.tag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
      --debug
      --atomic
      --timeout 120s
      --namespace $K8S_NAMESPACE
  # only:
  #   - master